rtShopOrderToStock:
  columns:
    quantity:                 { type: integer, default: 5 }
    stock_id:
      type: integer
      primary: true
    order_id:
      type: integer
      primary: true
  relations:
    rtShopOrder:              { onDelete: CASCADE, local: order_id, foreign: id }
    rtShopStock:              { onDelete: CASCADE, local: stock_id, foreign: id }


rtShopOrder:
  actAs:
    Timestampable:
      created:
        name:                created_at
        type:                timestamp
        format:              Y-m-d H:i:s
      updated:
        name:                updated_at
        type:                timestamp
        format:              Y-m-d H:i:s
    rtSearchTemplate:
      fields:                [voucher_code, email_address, notes_admin, notes_user, reference, payment_transaction_id, extended_search_data]
  columns:

    # base values
    reference:                string(50)
    status:                   string(50)
    is_wholesale:             boolean
    email_address:            string(255)

    # user
    user_id:                  integer

    # shipping
    shipping_charge:          float

    # tax
    tax_charge:               float
    tax_component:            float
    tax_mode:                 string(50)
    tax_rate:                 float

    # promotion
    promotion_reduction:      float
    promotion_id:             integer
    promotion_data:           array(10000)

    # voucher
    voucher_reduction:        float
    voucher_id:               integer
    voucher_code:             string(50)
    voucher_data:             array(10000)

    # products
    products_data:            array(10000)

    # totals
    items_charge:             float
    total_charge:             float

    # payment
    payment_transaction_id:   string(255)
    payment_type:             string(255)
    payment_charge:           float
    payment_data:             array(10000)

    # notes
    notes_user:               string
    notes_admin:              string

  relations:
    Stocks:
      class: rtShopStock
      local: order_id
      foreign:  stock_id
      refClass: rtShopOrderToStock