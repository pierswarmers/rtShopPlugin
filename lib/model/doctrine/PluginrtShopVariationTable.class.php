<?php

/**
 * PluginrtShopVariationTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginrtShopVariationTable extends Doctrine_Table
{
  /**
   * Return the variations for a given attribute_id value, and ordering them
   * by their position.
   *
   * @param int $attribute_id
   * @param Doctrine_Query $query
   * @return Doctrine_Collection
   * @see PluginrtShopVariationTable::addQueryFindByAttributeId()
   */
  public function findByAttributeId($attribute_id, Doctrine_Query $query = null)
  {
    return $this->addQueryFindByAttributeId($attribute_id, $query)->execute();
  }

  /**
   * Return the variations for a given attribute_id value, and ordering them
   * by their position.
   *
   * @param int $attribute_id
   * @param Doctrine_Query $query
   * @return Doctrine_Collection
   * @see PluginrtShopVariationTable::addQueryFindByAttributeId()
   */
  public function findByAttributeIdAndProductId($attribute_id, $product_id, Doctrine_Query $query = null)
  {
    $query = $this->getQuery($query);
    $query = $this->addQueryFindByAttributeId($attribute_id, $query);

    // Connect the product via stock, and the stock level.
    $query->leftJoin('variation.rtShopStocks stock')
          ->leftJoin('stock.rtShopProduct product')
          //->andWhere('(stock.quantity > 0 OR product.backorder_allowed = true)')
          ->andWhere('product.id = stock.product_id')
          ->andWhere('product.id = ?', $product_id)
          //->groupBy('variation.id')
    ;
    return $query->execute();
  }

  /**
   * Return a query restricting the variations to a given attribute_id value, and ordering them
   * by their position.
   *
   * @param int $attribute_id
   * @param Doctrine_Query $query
   * @return Doctrine_Query
   * @see PluginrtShopVariationTable::findByAttributeId()
   */
  public function addQueryFindByAttributeId($attribute_id, Doctrine_Query $query = null)
  {
    $query = $this->getQuery($query);
    $query->andWhere('variation.attribute_id =?', $attribute_id)
          ->orderBy('variation.position ASC');
    return $query;
  }

  /**
   * Return a query object, creating a new one if needed.
   *
   * @param Doctrine_Query $query
   * @return Doctrine_Query
   */
  public function getQuery(Doctrine_Query $query = null)
  {
    if(is_null($query))
    {
      $query = parent::createQuery('variation');
    }
    return $query;
  }

  /**
   * Returns an instance of this class.
   *
   * @return object PluginrtShopVariationTable
   */
  public static function getInstance()
  {
      return Doctrine_Core::getTable('PluginrtShopVariation');
  }
}